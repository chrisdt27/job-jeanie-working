// pages/create-job-ai.tsx

import { useState } from 'react';
import { useRouter } from 'next/router';
import toast from 'react-hot-toast';

export default function CreateJobAIPage() {
  const router = useRouter();
  const [idea, setIdea] = useState('');
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [loading, setLoading] = useState(false);

  const generateJob = async () => {
    if (!idea.trim()) {
      toast.error('Please enter your job idea.');
      return;
    }
    setLoading(true);

    try {
      const response = await fetch('/api/generate-job', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ idea }),
      });

      const data = await response.json();

      if (response.ok) {
        setTitle(data.title);
        setDescription(data.description);
        toast.success('✅ Job generated by Jeanie!');
      } else {
        toast.error(`❌ ${data.error || 'Error generating job'}`);
      }
    } catch (error) {
      console.error('Error:', error);
      toast.error('❌ Error generating job. Please try again.');
    } finally {
      setLoading(false);
    }
  };

  const submitJob = async () => {
    if (!title.trim() || !description.trim()) {
      toast.error('Title and description are required.');
      return;
    }
    setLoading(true);

    try {
      const response = await fetch('/api/post-job', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, description }),
      });

      if (response.ok) {
        toast.success('✅ Job posted successfully!');
        router.push('/dashboard');
      } else {
        const data = await response.json();
        toast.error(`❌ ${data.error || 'Error posting job'}`);
      }
    } catch (error) {
      console.error('Error:', error);
      toast.error('❌ Error posting job. Please try again.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px', fontFamily: 'sans-serif' }}>
      <button
        onClick={() => router.push('/dashboard')}
        style={{
          marginBottom: '10px',
          padding: '8px 12px',
          backgroundColor: '#0070f3',
          color: '#fff',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
        }}
      >
        ← Back to Dashboard
      </button>

      <h1>Create Job with Jeanie AI</h1>

      <textarea
        rows={3}
        placeholder="Describe your job idea..."
        value={idea}
        onChange={(e) => setIdea(e.target.value)}
        style={{ width: '100%', padding: '10px', borderRadius: '8px', border: '1px solid #ccc', marginBottom: '10px' }}
      />
      <button
        onClick={generateJob}
        disabled={loading}
        style={{
          padding: '10px',
          backgroundColor: '#0070f3',
          color: '#fff',
          border: 'none',
          borderRadius: '8px',
          cursor: 'pointer',
          width: '100%',
          marginBottom: '20px',
        }}
      >
        {loading ? 'Generating...' : 'Generate with Jeanie'}
      </button>

      {title && (
        <>
          <h3>Title</h3>
          <input
            type="text"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            style={{ width: '100%', padding: '10px', borderRadius: '8px', border: '1px solid #ccc', marginBottom: '10px' }}
          />
          <h3>Description</h3>
          <textarea
            rows={6}
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            style={{ width: '100%', padding: '10px', borderRadius: '8px', border: '1px solid #ccc', marginBottom: '10px' }}
          />
          <button
            onClick={submitJob}
            disabled={loading}
            style={{
              padding: '10px',
              backgroundColor: '#28a745',
              color: '#fff',
              border: 'none',
              borderRadius: '8px',
              cursor: 'pointer',
              width: '100%',
            }}
          >
            {loading ? 'Posting...' : 'Post Job'}
          </button>
        </>
      )}
    </div>
  );
}
